@use "styles/constants.scss" as c;

.groupContainer {
  position: relative;
  width: 100%;
  border-radius: 8px;
  background: rgba(255, 255, 255, 1);

  header {
    position: relative;
    display: flex;
    flex-direction: row;
    width: 100%;
    border-radius: 8px;
    margin-bottom: 2px;
    height: 20px;
    &:before {
      //position: absolute;
      //height: 4px;
      //width: 50%;
      //content: '';
      //left: 50%;
      //top: 12px;
      //transform: translateX(-50%);
      //background: white;
    }
  }
  &.selected header:before {
    background: rgba(0, 111, 255, 0.5);
  }
}

.group {
  min-height: unset;
  padding: 0 12px 12px;

  ul {
    overflow: initial;
  }

  li {
    padding: 8px 12px 8px 8px !important;
  }
}

.header {
  position: relative;
  display: flex;
  width: 100%;
  gap: 10px;
}

.rmBtn {
  position: absolute;
  right: 10px;
  top: 0;
}

.title {
  display: flex;
  align-items: center;
  gap: 6px;
  font-weight: 600;
  max-width: calc(100% - 70px);
}


.memoryChart {
  $size: 100px;
  $line-width: 10px;
  $percentage: 40;
  $color: #006fff;
  display: flex;
  justify-content: center;
  align-items: center;
  width: $size;
  height: $size;
  border-radius: 50%;
  position: relative;
  box-sizing: border-box;
  background:
          radial-gradient(farthest-side, $color 98%,#0000) top/$line-width $line-width no-repeat,
          conic-gradient($color calc($percentage * 1%),#0000 0);

  .after {
    content:"";
    position:absolute;
    border-radius:50%;
    width: $line-width;
    height: $line-width;
    background:$color;
    transform: rotate(calc($percentage*3.6deg)) translateY(calc(50% - $size/2));
  }

  .inner {
    width: $size - $line-width * 2;
    height: $size - $line-width * 2;
    background: white;
    border-radius: 50%;
  }
}

.checkbox {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  width: 30%;
  min-width: 20px;
  height: 18px;

  input {
    position: absolute;
    z-index: -1;
    opacity: 0;
    &+label {
      cursor: pointer;
      display: inline-flex;
      align-items: center;
      user-select: none;
      width: 100%;
      height: 100%;

      &::before {
        content: '';
        display: inline-block;
        flex-shrink: 0;
        flex-grow: 0;
        border-bottom-right-radius: 8px;
        border-bottom-left-radius: 8px;
        //border-top-left-radius: 4px;
        background-repeat: no-repeat;
        background-position: center center;
        background-size: 50% 50%;
        width: 100%;
        height: 100%;
        border-left: 1px solid rgba(161, 161, 161, 0.5);
        border-bottom: 1px solid rgba(161, 161, 161, 0.5);
        border-right: 1px solid rgba(161, 161, 161, 0.5);
      }
    }

    &:checked+label:before {
      border-color: #0b76ef;
      background-color: #0b76ef;
      opacity: 1;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e");
    }
  }
}